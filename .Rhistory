#install.packages(librarian)
librarian::shelf(tidyverse, readxl,rioja,vegan)
setwd("C:/Users/lsethna_smm/Documents/GitHub/wildernesslakes_paleo_pfractions") #change this to match local GitHub folder
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
#interpolated master data
master_dat <- read.csv("raw_data/interpolated_master_dat_4Sep25.csv") %>% select(!X)
#Organic C variable; keep only lake, date,and org_C variables
org_c <- read.csv("raw_data/deriv_orgC.csv") %>% select(lake,year_loess,orgC_burial_g_cm2_yr,deriv_orgC)
#pfrac data
pfrac <- read.csv("raw_data/pfrac.csv") %>% pivot_wider(id_cols=c(lake,bottom_interval_cm)) %>%
rename(depth=bottom_interval_cm)
## merge together
master_dat_v2 <- master_dat %>% left_join(org_c) %>% left_join(pfrac)
## get variables from PCoA
imp_variables <- read.csv("Paleo PCoA/sig_variables_pcoa_by_lake.csv")
#get codes to change imp_variables back to match var names in master data
variable_code <- read.csv("Paleo PCoA/pcoa_variable_abbr.csv")
lakes = unique(master_dat_v2$lake)
?strat.plot\
?strat.plot
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
##here we can define the types of variables for color
#and pretty them up for plotting
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
View(lake_dat)
View(imp_variables)
glimpse(vars)
glimpse(variable_code)
glimpse(vars_code)
glimpse(imp_variables)
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type) %>% pull()
glimpse(lake_dat)
vars_code
variable_code
rep("hotpink",3)
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,col.poly=strat.colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
lakes = unique(master_dat_v2$lake)
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(1830,2020,20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
glimpse(lake_dat)
min(round(lake_dat$year_loess))
?round
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(min(round(lake_dat$year_loess)),max(round(lake_dat$year_loess)),20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(min(round(lake_dat$year_loess)),max(round(lake_dat$year_loess)),20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=paste(lakes[i]),
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
plyr::round_any(min(lake_dat$year_loess))
plyr::round_any(min(lake_dat$year_loess),10)
View(lake_dat)
plyr::round_any(max(lake_dat$year_loess),10)
lakes = unique(master_dat_v2$lake)
lakes
pretty_lake_names = c("Burnt","Dunnigan","East Twin","Elbow","Finger","Flame","Smoke","West Twin")
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(plyr::round_any(min(lake_dat$year_loess),10),plyr::round_any(max(lake_dat$year_loess),10),20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=pretty_lake_names[i],
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(plyr::round_any(min(lake_dat$year_loess),10),plyr::round_any(max(lake_dat$year_loess),10),20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=pretty_lake_names[i],
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(plyr::round_any(min(lake_dat$year_loess),10),2020,20),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=pretty_lake_names[i],
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
seq(plyr::round_any(min(lake_dat$year_loess),10),2020,20)
y.tks=seq(plyr::round_any(min(lake_dat$year_loess),10),2030,20)
seq(plyr::round_any(min(lake_dat$year_loess),10),2030,20)
for (i in 1:length(lakes)){
# Select data for strat plots
vars_code <- imp_variables %>% filter(lake==lakes[i]) %>% select(var) %>% pull()
#get full name from code df
vars <- variable_code %>% filter(code %in% vars_code) %>% select(var) %>% pull()
lake_dat <- master_dat_v2 %>% filter(lake==lakes[i]) %>%
select(year_loess,all_of(vars),deriv_orgC,labile,ironbound)
#CONISS
#get column numbers to skip
col_names_to_skip <- c("year_loess","deriv_orgC","labile","ironbound")
col_n_to_skip <- which(names(lake_dat) %in% col_names_to_skip)
#distance matrix
dist.mat <- vegdist(lake_dat[,-c(col_n_to_skip)],method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm=T)
#coniss cluster
chclust.obj <- chclust(dist.mat,method="coniss")
#create a vector of colors based on variable type
var_colors <- imp_variables %>% filter(lake==lakes[i]) %>% select(var_type)
var_colors <- var_colors %>% mutate(color = case_when(var_type=="diatoms"~"#ffa500",
var_type=="pigment"~"#006400"))
strat_colors <- c(#colors for bio vars,
var_colors$color,
rep("hotpink",3) #for the three geochem vars
)
#will also need to pretty up the lake names for the titles
#run this to save plot
file = paste0("Bio proxy CONISS/",lakes[i],"_strat_coniss.pdf")
pdf(
file=file,
width=11,height=8.5
)
strat.plot(lake_dat[,-1],yvar=lake_dat$year_loess, #[rows,col]
y.tks=seq(plyr::round_any(min(lake_dat$year_loess),10),2020,10),
plot.poly=T,plot.bar=F,col.poly=strat_colors,
srt.xlabel=45,title=pretty_lake_names[i],
las=2,mgp=c(3,1,0.25),xSpace=0.01,
clust=chclust.obj)
dev.off() #clear before rerunning next lake
}
