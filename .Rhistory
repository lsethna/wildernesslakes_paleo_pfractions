CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4),
Slope1 = if (!is.na(slope1)) round(slope1, 4) else NA,
Slope2 = if (!is.na(slope2)) round(slope2, 4) else NA
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract slopes for each segment
slopes <- slope(segmented_model)
slope1 <- if (!is.null(slopes$slope[1, "Est."])) slopes$slope[1, "Est."] else NA
slope2 <- if (nrow(slopes$slope) > 1 && !is.null(slopes$slope[2, "Est."])) slopes$slope[2, "Est."] else NA
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4),
Slope1 = if (!is.na(slope1)) round(slope1, 4) else NA,
Slope2 = if (!is.na(slope2)) round(slope2, 4) else NA
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
# Print the final table
print(final_results_table)
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4),
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
# Print the final table
print(final_results_table)
glimpse(diatoms_clean)
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4),
Mixing_regime=mixing_regime,
current_trophic_status=trophic_status
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4),
Mixing_regime= mixing_regime,
current_trophic_status=trophic_status
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
# Print the final table
print(final_results_table)
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
Lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Print the final table
print(final_results_table)
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
glimpse(clean_diatoms)
glimpse(diatoms_clean)
#Add in Trophic status and mixing regime
diatoms_clean_subset <- diatoms_clean[, c("lake", "trophic_status", "mixing_regime")]
# Merge the final_results_table with the clean_diatoms_subset by 'Lake'
final_results_table <- merge(final_results_table, diatoms_clean_subset, by = "lake", all.x = TRUE)
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
#Add in Trophic status and mixing regime
diatoms_clean_subset <- diatoms_clean[, c("lake", "trophic_status", "mixing_regime")]
# Merge the final_results_table with the clean_diatoms_subset by 'Lake'
final_results_table <- merge(final_results_table, diatoms_clean_subset, by = "lake", all.x = TRUE)
# Print the final table
print(final_results_table)
#Add in Trophic status and mixing regime
final_results_table <- final_results_table %>%
mutate(mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(final_results_table)
# Print the final table
print(final_results_table)
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
#Add in Trophic status and mixing regime
final_results_table <- final_results_table %>%
mutate(mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(final_results_table)
#Add in Trophic status and mixing regime
final_results_table <- final_results_table %>%
mutate(contemporay_mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(final_results_table)
# Combine all lake results into a single table
final_results_table <- do.call(rbind, brakepoint_results_list)
#Add in Trophic status and mixing regime
final_results_table <- final_results_table %>%
mutate(contemporay_mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(final_results_table)
View(final_results_table)
#Show that the lakes are increasing in stratification
diatoms %>% na.omit() %>%
ggplot(aes(x=year_loess, y=ratio_strat_polymictic))+
geom_line()+
facet_wrap(~lake)
View(diatoms)
#Polymictic vs Stat
diatoms %>% na.omit() %>%
ggplot(aes(x=year_loess, y=ratio_strat_polymictic))+
geom_line()+
facet_wrap(~lake, scales = "Free")
#Polymictic vs Stat
diatoms %>% na.omit() %>%
ggplot(aes(x=year_loess, y=ratio_strat_polymictic))+
geom_line()+
facet_wrap(~lake, scales = "free")
###############Trying a loop, ratio_strat_dimictic#############
# Initialize an empty list to store results
brakepoint_results_list <- list()
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_dimictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
strat_dimictic_results_table <- do.call(rbind, brakepoint_results_list)
#Add in Trophic status and mixing regime
strat_dimictic_results_table <- strat_dimictic_results_table %>%
mutate(contemporay_mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(strat_dimictic_results_table)
glimpse(diatoms_clean)
##########################
brakepoint_results_list <- list()
# Loop through each lake
for (lake_name in unique(diatoms_clean$lake)) {
# Subset the data for the current lake
lake_data <- subset(diatoms_clean, lake == lake_name)
# Fit the model
lake_lm <- lm(ratio_strat_polymictic ~ year_loess, data = lake_data)
segmented_model <- segmented(lake_lm)
# Extract statistics
breakpoint <- segmented_model$psi[, "Est."]
ci <- confint(segmented_model)
davies_pvalue <- davies.test(lake_lm)$p.value
# Store results in a data frame
lake_results <- data.frame(
lake = lake_name,
Breakpoint = round(breakpoint, 2),
CI_Lower = round(ci[1, 1], 2),
CI_Upper = round(ci[1, 2], 2),
Davies_Test_pvalue = round(davies_pvalue, 4)
)
# Append to the results list
brakepoint_results_list[[lake_name]] <- lake_results
}
# Combine all lake results into a single table
strat_polymictic_results_table <- do.call(rbind, brakepoint_results_list)
#Add in Trophic status and mixing regime
strat_polymictic_results_table <- strat_dimictic_results_table %>%
mutate(contemporay_mixing_regime = case_when(
lake == "flame" ~ "dimictic",
lake == "wtwin" ~ "dimictic",
lake == "finger" ~ "well_mixed",
lake == "dunnigan" ~ "well_mixed",
TRUE ~ "polymictic"),
trophic_status=case_when(
lake == "dunnigan" ~ "oligotrophic",
lake == "wtwin" ~ "oligotrophic",
TRUE ~ "mesotrophic"))  # Default case if none match
# Print the final table
print(strat_polymictic_results_table)
librarian::shelf(tidyverse,grid,vegan,cowplot,zoo)
library(readr)
WL_paleo_master <- read_csv("Master dataset/WL_paleo_masterdataset_20Nov2024.csv")
View(WL_paleo_master)
glimpse(WL_paleo_master)
#pull Relvant data
cluster <- WL_paleo_master %>% select(c(lake,year_loess,percent_organic, #selecting col
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a,
phaeo_b,
lutein,#indicates increase in green algae and tresstrial plants
diato, #increase in diatoms
echine,cantha,myxo, #cyanos
sio2_wt_percent,
ast_formosa, aul_ambigua,
aul_granulata,
aul_subarctica,
fra_crotonensis,
lin_comta,
nav_cryptocephala,
nit_perminuta,
pse_elliptica,
sel_nigri,
sel_saugerresii,
sta_construens,
sta_pinnata,
sta_venter,
tab_fenestrata,
tab_flocculosa
))
#pull Relvant data
cluster <- WL_paleo_master %>% select(c(lake,year_loess,percent_organic, #selecting col
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a,
phaeo_b,
lutein,#indicates increase in green algae and tresstrial plants
diato, #increase in diatoms
echine,cantha,myxo, #cyanos
sio2_wt_percent,
ast_formosa, aul_ambigua,
aul_granulata,
aul_subarctica,
fra_crotonensis,
lin_comta,
nav_cryptocephala,
nit_perminuta,
pse_elliptica,
sel_nigri,
sel_saugerresii,
sta_construens,
sta_pinnata,
sta_venter,
tab_fenestrata,
tab_flocculosa
))
#pull Relevant data
cluster <- WL_paleo_master %>% select(c(lake,year_loess,percent_organic, #selecting col
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a,
phaeo_b,
lutein,#indicates increase in green algae and tresstrial plants
diato, #increase in diatoms
echine,cantha,myxo, #cyanos
sio2_wt_percent,
ast_formosa, aul_ambigua,
aul_granulata,
aul_subarctica,
fra_crotonensis,
lin_comta,
nav_cryptocephala,
nit_perminuta,
pse_elliptica,
sel_nigri,
sel_saugerresii,
sta_construens,
sta_pinnata,
sta_venter,
tab_fenestrata,
tab_flocculosa))
cluster <- WL_paleo_master %>%
select(
lake,
year_loess,
percent_organic, # Selecting columns
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a,
phaeo_b,
lutein, # Indicates increase in green algae and terrestrial plants
diato, # Increase in diatoms
echine, cantha, myxo, # Cyanobacteria
sio2_wt_percent,
ast_formosa, aul_ambigua,
aul_granulata, aul_subarctica,
fra_crotonensis, lin_comta,
nav_cryptocephala, nit_perminuta,
pse_elliptica, sel_nigri,
sel_saugerresii, sta_construens,
sta_pinnata, sta_venter,
tab_fenestrata, tab_flocculosa
)
cluster <- WL_paleo_master %>% select(c(lake,year_loess,percent_organic, #selecting col
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a))
#pull Relevant data
cluster <- WL_paleo_master %>% select(c(lake,year_loess,percent_organic,
tp_results_mg_p_g,
TOC_TN_ratio,
chl_a,
phaeo_b,
lutein,#indicates increase in green algae and tresstrial plants
diato, #increase in diatoms
echine,cantha,myxo, #cyanos
sio2_wt_percent,
ast_formosa, aul_ambigua,
aul_granulata,
aul_subarctica,
fra_crotonensis,
lin_comta,
nav_cryptocephala,
nit_perminuta,
pse_elliptica,
sel_nigri,
sel_saugerresii,
sta_construens,
sta_pinnata,
sta_venter,
tab_fenestrata,
tab_flocculosa))
