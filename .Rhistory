geom_sf(data=mn_border)+
geom_point(data=mn_cyanos,aes(x=lat_dd83,y=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
ggplot()+
geom_sf(data=mn_border)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#get county boundaries
mn_counties <- read_sf(dsn="G:/Shared drives/SCWRS/Sethna/LCCMR FY25 - Wilderness Lakes II/NLA cyano map/shp_bdry_counties/County_Boundaries_in_Minnesota.shp") %>% st_transform("epsg:4269")
ggplot()+
geom_sf(data=mn_border)+
geom_sf(data=mn_counties)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
ggplot()+
geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
ggplot()+
geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#get surface waters of minnesota
water <- read_sf(dsn="G:/Shared drives/SCWRS/Shared/ABC Shared Lab Folder/Wilderness Lakes/GIS stuff/shp_water_dnr/dnr_hydro_features_all.shp") %>% st_transform("epsg:4326")
#get surface waters of minnesota
water <- read_sf(dsn="G:/Shared drives/SCWRS/Shared/ABC Shared Lab Folder/Wilderness Lakes/GIS stuff/shp_water_dnr/dnr_hydro_features_all.shp") %>% st_transform("epsg:4326")
#keep only lakes
lakes <- water %>% filter(wb_class=="Lake or Pond",in_lakefin=="Y")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_sf(data=lakes,fill="darkblue")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
View(lakes)
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_sf(data=lakes,color="white",fill="darkblue")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_sf(data=lakes,color="darkblue",fill="darkblue")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=mn_counties,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_sf(data=mn_counties,fill=NULL)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_sf(data=mn_counties,fill="white",alpha=1)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_sf(data=mn_counties,fill=NA)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins - 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_sf(data=mn_counties,fill=NA)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyano-toxins in 2022",size=5)+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
#plot map with county lines, lakes, and cyanoHAB reports
ggplot()+
#geom_sf(data=mn_border,fill="white")+
geom_sf(data=lakes,color="lightblue",fill="lightblue")+
geom_sf(data=mn_counties,fill=NA)+
geom_point(data=mn_cyanos,aes(y=lat_dd83,x=lon_dd83),pch=21,size=3,fill="red")+
ggtitle("Lakes with measured cyanobacterial toxins in 2022")+
theme_void()+
theme(#panel.grid.major=element_line(),
#panel.background=element_blank(),
#panel.ontop=T,
legend.position="none")
setwd("C:/Users/lsethna_smm/Documents/GitHub/wildernesslakes_paleo_pfractions/Stratigraphic diagrams") #change this to match local GitHub folder
#install.packages(librarian)
librarian::shelf(tidyverse, googledrive,readxl)
## ----------------------------------- ##
# Download data ----
## ----------------------------------- ##
# Identify URLs of Drive folders with needed data
master_dat <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/13rrJv6QRCx4q342zEjsmbiO1J0xZuyzk")
# Check those files
wanted_files
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = master_url) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_paleo_masterdataset_22Sept2024.csv"))
## ----------------------------------- ##
# Housekeeping ----
## ----------------------------------- ##
rm(list=ls())
## ----------------------------------- ##
# Download data ----
## ----------------------------------- ##
# Identify URLs of Drive folders with needed data
master_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/13rrJv6QRCx4q342zEjsmbiO1J0xZuyzk")
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = master_url) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_paleo_masterdataset_22Sept2024.csv"))
# Check those files
wanted_files
setwd("C:/Users/lsethna_smm/Documents/GitHub/wildernesslakes_paleo_pfractions") #change this to match local GitHub folder
# Download that data
purrr::walk2(.x = wanted_files$name, .y = wanted_files$id,
.f = ~ googledrive::drive_download(file = .y, overwrite = T,
path = file.path("raw_data", .x)))
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
master_dat <- read.csv("WL_paleo_masterdataset_22Sept2024.csv")
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
master_dat <- read.csv("raw_data/WL_paleo_masterdataset_22Sept2024.csv")
#check
glimpse(master_dat)
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
master_dat <- read.csv("raw_data/WL_paleo_masterdataset_22Sept2024.csv") %>% select(!X)
#check
glimpse(master_dat)
## ----------------------------------- ##
# Housekeeping ----
## ----------------------------------- ##
rm(list=ls())
#install.packages(librarian)
librarian::shelf(tidyverse, googledrive,readxl)
# Identify URLs of Drive folders with needed data
main_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/1r-S5jPa9KzL2cJXTVseFiknRKoMTF35v") #main WL folder
bsi_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/1T1OwrQpbi3JoLwBleRM6tquK_7rX6rYP") #contains WL_BSi_all.xlsx
dates_dmar_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/1qzXj9PzjJPqfbgQhzEZGg8Yr2Xr9knv4") #contains sections_interp_year_dmar_30July2024.csv
loi_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/1WhQLgIDeu5N1SvcdrYztCWfjBdCb-HR_") #contains WL_LOI_allcores.xlsx
pigment_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/1y-zoTHbMW9eBUMPLkWLC_P6Qvcw-n-yL") #raw pigment data, all cores WL_pigments_allcores.csv
pfracs_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/11lWhi9zlPjE2PDnLIAPNbDnbVXrGAxQo") #Pfrac_mass_focuscorrect google sheet
diatoms_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/111Cev1JyY5i4EFqkmUcvtsrBZHt_Z_f8") #wilddiatom_rawdat.csv
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = bsi_url) %>%
dplyr::bind_rows(googledrive::drive_ls(path = dates_dmar_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = loi_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pigment_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pfracs_url)) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_BSi_all.xlsx",
"sections_interp_year_dmar_30July2024.csv",
"WL_LOI_allcores.xlsx",
"WL_pigments_allcores.csv",
"Pfrac_mass_focuscorrect", #saved as Google sheet, no file extension needed
"wilddiatom_rawdat.csv"
))
# Check those files
wanted_files
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = bsi_url) %>%
dplyr::bind_rows(googledrive::drive_ls(path = dates_dmar_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = loi_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pigment_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pfracs_url)) %>%
dplyr::bind_rows(googledrive:drive_ls(path=diatoms_url)) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_BSi_all.xlsx",
"sections_interp_year_dmar_30July2024.csv",
"WL_LOI_allcores.xlsx",
"WL_pigments_allcores.csv",
"Pfrac_mass_focuscorrect", #saved as Google sheet, no file extension needed
"wilddiatom_rawdat.csv"
))
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = bsi_url) %>%
dplyr::bind_rows(googledrive::drive_ls(path = dates_dmar_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = loi_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pigment_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path = pfracs_url)) %>%
dplyr::bind_rows(googledrive::drive_ls(path=diatoms_url)) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_BSi_all.xlsx",
"sections_interp_year_dmar_30July2024.csv",
"WL_LOI_allcores.xlsx",
"WL_pigments_allcores.csv",
"Pfrac_mass_focuscorrect", #saved as Google sheet, no file extension needed
"wilddiatom_rawdat.csv"
))
# Check those files
wanted_files
# Download that data
purrr::walk2(.x = wanted_files$name, .y = wanted_files$id,
.f = ~ googledrive::drive_download(file = .y, overwrite = T,
path = file.path("raw_data", .x)))
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
bsi <- read_excel("raw_data/WL_BSi_all.xlsx")
dates_dmar <- read.csv("raw_data/sections_interp_year_dmar_30July2024.csv")
loi <- read_excel("raw_data/WL_LOI_allcores.xlsx") %>% janitor::clean_names()
pfracs <- read_excel("raw_data/Pfrac_mass_focuscorrect.xlsx")
pigments <- read.csv("raw_data/WL_pigments_allcores.csv")
diatoms <- read.csv("raw_data/wilddiatom_rawdat.csv")
diatoms_v2 <- diatoms %>% select(!c(`...1`,Year)) %>% #use dates from loess model
dplyr::rename(depth=botepth,
lake=Lake) %>%
mutate(lake=case_when(lake=="Burnt"~"burnt",
lake=="Dunnigan"~"dunnigan",
lake=="ETwin"~"etwin",
lake=="Elbow"~"elbow",
lake=="Finger"~"finger",
lake=="Flame"~"flame",
lake=="Smoke"~"smoke",
lake=="WTwin"~"wtwin"))
glimpse(diatoms)
diatoms_v2 <- diatoms %>% select(!c(X,Year)) %>% #use dates from loess model
dplyr::rename(depth=botepth,
lake=Lake) %>%
mutate(lake=case_when(lake=="Burnt"~"burnt",
lake=="Dunnigan"~"dunnigan",
lake=="ETwin"~"etwin",
lake=="Elbow"~"elbow",
lake=="Finger"~"finger",
lake=="Flame"~"flame",
lake=="Smoke"~"smoke",
lake=="WTwin"~"wtwin"))
glimpse(diatoms_v2)
?rowsum
diatoms_v3 <- diatoms_v2 %>% group_by(lake,depth) %>%
mutate(tot_count = rowsum())
?rowSums
diatoms_v3 <- diatoms_v2 %>% group_by(lake,depth) %>%
mutate(tot_count = rowSums())
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count = rowSums())
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count = rowSums(select(!c(lake,depth))))
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count = rowSums(select_(!c(lake,depth))))
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=TRUE))
View(diatoms_v3)
glimpse(diatoms_v3)
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=TRUE)) %>%
mutate_at(vars(-c(lake,depth)),funs(./tot_count))
glimpse(diatoms_v3)
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=TRUE)) %>%
mutate_at(vars(-c(lake,depth)),funs(./tot_count*100))
glimpse(diatoms_v3)
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
mutate(tot_abund=rowSums(across(where(is.numeric)),na.rm=T))
glimpse(diatoms_v3)
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
drop(tot_count) %>%
mutate(tot_abund=rowSums(across(where(is.numeric)),na.rm=T))
?drop
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(where(is.numeric)), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
select(!tot_count) %>%
mutate(tot_abund=rowSums(across(where(is.numeric)),na.rm=T))
glimpse(diatoms_v3)
?across
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(select(!c(lake,depth)), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
mutate(tot_abund=rowSums(select(!c(lake,depth,tot_count)),na.rm=T))
rlang::last_trace()
?across
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(`Ach..microcephala`:`Uln..ulna`), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100))
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(`Ach..microcephala`:`Uln..ulna`), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
mutate(tot_abund=rowSums(across(`Ach..microcephala`:`Uln..ulna`),na.rm=T))
glimpse(diatoms_v3)
#calculate relative abundance
diatoms_v3 <- diatoms_v2 %>% mutate(tot_count=rowSums(across(`Ach..microcephala`:`Uln..ulna`), na.rm=T)) %>%
mutate_at(vars(-c(lake,depth,tot_count)),funs(./tot_count*100)) %>%
mutate(tot_abund=rowSums(across(`Ach..microcephala`:`Uln..ulna`),na.rm=T)) %>%
janitor::clean_names()
glimpse(diatoms_v3)
## ----------------------------------- ##
# Merge together ----
## ----------------------------------- ##
master_v1 <- dates_dmar_v2 %>%
full_join(loi_v2) %>%
full_join(bsi_v2) %>%
full_join(pfracs_v2) %>%
full_join(pigments_v2) %>%
full_join(diatoms_v3)
#format column names to match
#lake, depth, analyte before name...
bsi_v2 <- bsi %>% select(!c(date,dmar,flux_g)) %>% janitor::clean_names() %>%
rename(flux_sio2_mg=flux_mg,
sio2_wt_percent=wt_percent)
dates_dmar_v2 <-
dates_dmar %>% select(lake,year_loess,dmar_loess,base) %>%
rename(depth=base)%>%
mutate(lake=case_when(lake=="Burnt"~"burnt",
lake=="Dunnigan"~"dunnigan",
lake=="East Twin"~"etwin",
lake=="Elbow"~"elbow",
lake=="Finger"~"finger",
lake=="Flame"~"flame",
lake=="Smoke"~"smoke",
lake=="West Twin"~"wtwin"))
loi_v2 <- loi %>% select(!c(top)) %>%
rename(depth=base)%>%
mutate(lake=case_when(lake=="Burnt"~"burnt",
lake=="Dunnigan"~"dunnigan",
lake=="E Twin"~"etwin",
lake=="Elbow"~"elbow",
lake=="Finger"~"finger",
lake=="Flame"~"flame",
lake=="Smoke"~"smoke",
lake=="W Twin"~"wtwin"))
pfracs_v2 <- pfracs %>% select(!c(`...1`,id,notes,DMAR,year)) %>%
rename(depth=depth_base)
pigments_v2 <- pigments %>% select(!c(X,sample_depth,extraction_weight_mg,percent_organic)) %>%
mutate(lake=case_when(lake=="Burnt"~"burnt",
lake=="Dunnigan"~"dunnigan",
lake=="ETwin"~"etwin",
lake=="Elbow"~"elbow",
lake=="Finger"~"finger",
lake=="Flame"~"flame",
lake=="Smoke"~"smoke",
lake=="WTwin"~"wtwin"))
## ----------------------------------- ##
# Merge together ----
## ----------------------------------- ##
master_v1 <- dates_dmar_v2 %>%
full_join(loi_v2) %>%
full_join(bsi_v2) %>%
full_join(pfracs_v2) %>%
full_join(pigments_v2) %>%
full_join(diatoms_v3)
glimpse(master_v1)
write.csv(master_v1,file="WL_paleo_masterdataset_25Sept2024.csv")
_
## ----------------------------------- ##
# Housekeeping ----
## ----------------------------------- ##
rm(list=ls())
#install.packages(librarian)
librarian::shelf(tidyverse, googledrive,readxl)
setwd("C:/Users/lsethna_smm/Documents/GitHub/wildernesslakes_paleo_pfractions") #change this to match local GitHub folder
## ----------------------------------- ##
# Download data ----
## ----------------------------------- ##
# Identify URLs of Drive folders with needed data
master_url <- googledrive::as_id("https://drive.google.com/drive/u/0/folders/13rrJv6QRCx4q342zEjsmbiO1J0xZuyzk")
# Identify needed data in the Drive
wanted_files <- googledrive::drive_ls(path = master_url) %>%
# Filter to only needed files
dplyr::filter(name %in% c("WL_paleo_masterdataset_25Sept2024.csv"))
# Create a folder to download data into
dir.create(path = file.path("raw_data"), showWarnings = F)
# Download that data
purrr::walk2(.x = wanted_files$name, .y = wanted_files$id,
.f = ~ googledrive::drive_download(file = .y, overwrite = T,
path = file.path("raw_data", .x)))
## ----------------------------------- ##
# Read in data ----
## ----------------------------------- ##
master_dat <- read.csv("raw_data/WL_paleo_masterdataset_25Sept2024.csv") %>% select(!X)
#check
glimpse(master_dat)
#install.packages(librarian)
librarian::shelf(tidyverse, googledrive,readxl,rioja)
#Worne isotope proposal
vars <- c(lake,year_loess,tp_results_mg_p_g,sio2_wt_percent,chl_a,echine,cantha,fra_crotonensis,ast_formosa)
#Worne isotope proposal
worne <- master_dat %>% select(c(lake,year_loess,tp_results_mg_p_g,sio2_wt_percent,chl_a,echine,cantha,fra_crotonensis,ast_formosa))
#Burnt
burnt <- worne %>%
filter(lake=="burnt")
View(burnt)
bur.dist <- vegdist(burnt[,3:9], method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
#plot using rioja?
librarian::shelf(rioja,vegan)
bur.dist <- vegdist(burnt[,3:9], method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = FALSE)
bur.dist <- vegdist(burnt[,3:9], method="euclidian", binary=FALSE, diag=FALSE, upper=FALSE, na.rm = TRUE)
View(burnt)
glimpse(burnt)
burnt.plot <- strat.plot(burnt[,3:9],yvar=burnt$year_loess,
y.tks=seq(1860,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
burnt.plot <- strat.plot(burnt[,3:9],yvar=burnt$year_loess,
y.tks=seq(1880,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
burnt.plot <- strat.plot(burnt[,3:9],yvar=burnt$year_loess,
y.tks=seq(1870,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
burnt.plot <- strat.plot(burnt[,3:9],yvar=burnt$year_loess,
y.tks=seq(1860,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
?strat.plot
burnt.plot <- strat.plot(burnt[,3],yvar=burnt$year_loess,
y.tks=seq(1860,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
burnt.plot <- strat.plot(burnt[,3:9],yvar=burnt$year_loess,
y.tks=seq(1860,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
#E. Twin
etwin <- worne %>%
filter(lake=="etwin") %>%
glimpse(burnt)
#E. Twin
etwin <- worne %>%
filter(lake=="etwin")
glimpse(etwin)
etwin.plot <- strat.plot(etwin[,3:9],yvar=etwin$year_loess,
y.tks=seq(1860,2020,20),
plot.poly=T,plot.bar=T,col.bar="black",
srt.xlabel=45,title="Burnt")
